# Nome do Workflow
name: DEPLOY FRONTEND Pipeline

# Evento que irá acionar a pipeline
on:
  push:
    branches:
      - main
      - ga-pipeline

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Download do Repositório
        uses: actions/checkout@v3       # https://github.com/actions/checkout

      - name: Setup Python
        uses: actions/setup-python@v4   # https://github.com/actions/setup-python
        with:
          python-version: '3.10'

      # Future steps to test the app
      # - name: Install Requirements
      #   run: pip install flask pytest pytest-cov flask-wtf flask-cors PyMySQL cryptography
      #
      # - name: Unit Test
      #   run: |
      #     coverage run --source=app -m pytest test.py
      #     coverage report -m
      #     coverage xml -i

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Docker Login
        run: |
          echo '${{ secrets.GCP_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin '${{ vars.GOOGLE_ARTIFACT }}'

      - name: Build & Push Image
        run: |
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.ARTIFACTREGISTRY_REPOSITORY }}/${{ vars.GOOGLE_MYAPPNAME }}:latest .
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.ARTIFACTREGISTRY_REPOSITORY }}/${{ vars.GOOGLE_MYAPPNAME }}:latest

  Deploy-Production:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3 # https://github.com/actions/checkout

      - name: Auth GCP
        uses: 'google-github-actions/auth@v1' # https://github.com/google-github-actions/auth
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Cloud Run Deploy - Production
        id: prod-deploy
        uses: 'google-github-actions/deploy-cloudrun@v1'  # https://github.com/marketplace/actions/deploy-to-cloud-run
        with:
          service: ${{ vars.GOOGLE_MYAPPNAME }}-prod
          image:   ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.ARTIFACTREGISTRY_REPOSITORY }}/${{ vars.GOOGLE_MYAPPNAME }}:latest
          flags: '--allow-unauthenticated'

      - name: Test Prod
        run: 'curl "${{ steps.prod-deploy.outputs.url }}"'
